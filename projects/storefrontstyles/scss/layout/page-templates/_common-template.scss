@if $theme == 'calydon' {
  :root {
    /** 
   * Specifies the time it will take to remove 
   * the pending class from a deferred page slot.
   */
    --cx-pending-slot-loading-delay: 500ms;
    /**
   * The minimum height for the next deferred page slots.
   * This value should make sure that the slot is not in
   * the view port, otherwise it will be observed by the 
   * Intersection Observer and get's loaded. 
   */
    --cx-pending-slot-margin-top: 100vh;
    --cx-pending-slot-min-height: 100vh;
  }

  cx-page-layout {
    // introduce ghost layout for lazy loaded components in Calydon

    cx-page-slot {
      height: auto;
      margin-top: 0;
      transition: margin 0s, min-height 0s, height 0s;
      // we delay the minimal real estate for pending slots
      transition-delay: var(--cx-pending-slot-loading-delay);

      &.cx-pending {
        min-height: 1px;
      }
    }

    cx-page-slot.page-fold ~ cx-page-slot.cx-pending {
      // add a minimum height to ensure that components inside slot aren't
      // in the viewport at once
      min-height: var(--cx-pending-slot-min-height);
    }

    // any page-slot after the fold, will get a large margin-top,
    // for as long as the fold element is still loading.
    cx-page-slot.cx-pending.page-fold ~ cx-page-slot.cx-pending {
      margin-top: var(--cx-pending-slot-margin-top);
    }
  }
}

cx-page-layout {
  display: block;
  width: 100%;

  > header {
    background-color: var(--cx-color-background);
    text-align: center;
    padding-bottom: 25px;
    padding-top: 25px;
  }

  cx-page-slot {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    flex: 1 1 var(--cx-flex-basis, 100%);
    > * {
      flex: 1 1 var(--cx-flex-basis, 100%);
    }
  }

  &.footer {
    background-color: var(--cx-background-color, var(--cx-color-dark));
    color: var(--cx-color, var(--cx-color-inverse));
  }
}

cx-page-slot {
  // smartedit requires every slot to be rendered in block mode
  // most likely it cannot make an overlay without some minimal sizingn
  display: block;
}

cx-paragraph {
  display: block;
}

cx-category-navigation {
  display: block;
}
