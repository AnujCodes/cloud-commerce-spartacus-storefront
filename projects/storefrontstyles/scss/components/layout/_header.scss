$space: 0.5rem;

%header {
  background-color: var(--cx-background-color, var(--cx-g-color-dark));
  color: var(--cx-color, var(--cx-g-color-inverse));
  display: block;

  .header {
    max-width: var(--cx-max-width, 1140px);
    margin: auto;

    @include media-breakpoint-up(lg) {
      padding: 0 10px;
    }

    display: flex;
    flex-wrap: wrap;

    > * {
      align-self: center;
      display: block;
      flex: none;
    }
  }

  &.is-expanded {
    .navigation {
      position: absolute;
      width: 100%;
      z-index: 2;
    }
    .PreHeader {
      z-index: 2;
    }

    @include media-breakpoint-down(md) {
      &:after {
        content: '';
        display: block;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-color: rgba(black, 0.75);
        z-index: 1;
      }
    }
  }

  &:not(.is-expanded) {
    cx-page-layout.navigation {
      display: none;
    }
  }

  .SiteContext,
  .SiteLinks {
    font-size: var(--cx-g-font-small, 0.75rem);
    color: var(--cx-color, var(--cx-g-color-light));
    > * {
      flex: none;
    }
    justify-content: flex-start;
  }

  .SiteLinks {
    --cx-display: block;
  }

  .SiteLogo {
    width: 95px;
  }

  .SearchBox {
    margin: 4px auto;

    @include media-breakpoint-down(sm) {
      margin: 4px 0 4px auto;
    }
  }

  .NavigationBar {
    flex: 100%;
  }

  .cx-hamburger {
    display: block;
  }

  @include media-breakpoint-only(xs) {
    .SearchBox {
      margin-left: auto;
    }
  }

  // non-desktop
  @include media-breakpoint-down(md) {
    .SiteContext,
    .SiteLinks,
    .SiteLogin {
      background-color: var(
        --cx-background-color,
        var(--cx-g-color-background)
      );
      color: var(--cx-color, var(--cx-g-color-text));
      padding: var(--cx-padding, #{$space / 2} 0);
    }

    .SiteContext {
      padding: $space $space * 2 $space / 2;
    }

    .SiteLinks {
      padding: $space / 2 $space * 2 $space;
    }
  }

  // desktop
  @include media-breakpoint-up(lg) {
    header {
      padding: 0 $space * 2;
    }
    .cx-hamburger {
      display: none;
    }

    .SiteContext,
    .SiteLinks {
      flex: 50%;
      display: flex;
      --cx-margin: #{$space} 8px;
    }

    .SiteContext {
      justify-content: flex-start;
      &:after {
        border-top: var(--cx-border-top, 1px solid currentColor);
        content: '';
        width: 100%;
        position: absolute;
        left: 0;
        top: 32px;
      }
    }

    .SiteLinks {
      justify-content: flex-end;
      --cx-padding: 0 #{$space};
    }

    .SiteLogin {
      padding: $space $space * 2;
    }
  }

  // cxDropdown
  // The dropdown wrapper (`<div>`)
  .dropup,
  .dropright,
  .dropdown,
  .dropleft {
    position: relative;
  }

  .dropdown-toggle {
    white-space: nowrap;

    // Generate the caret automatically
    @include caret;
  }

  // The dropdown menu
  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: $zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: $dropdown-min-width;
    padding: $dropdown-padding-y 0;
    margin: $dropdown-spacer 0 0; // override default ul
    @include font-size($dropdown-font-size);
    color: $dropdown-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: $dropdown-bg;
    background-clip: padding-box;
    border: $dropdown-border-width solid $dropdown-border-color;
    @include border-radius($dropdown-border-radius);
    @include box-shadow($dropdown-box-shadow);
  }

  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      .dropdown-menu#{$infix}-left {
        right: auto;
        left: 0;
      }

      .dropdown-menu#{$infix}-right {
        right: 0;
        left: auto;
      }
    }
  }

  // Allow for dropdowns to go bottom up (aka, dropup-menu)
  // Just add .dropup after the standard .dropdown class and you're set.
  .dropup {
    .dropdown-menu {
      top: auto;
      bottom: 100%;
      margin-top: 0;
      margin-bottom: $dropdown-spacer;
    }

    .dropdown-toggle {
      @include caret(up);
    }
  }

  .dropright {
    .dropdown-menu {
      top: 0;
      right: auto;
      left: 100%;
      margin-top: 0;
      margin-left: $dropdown-spacer;
    }

    .dropdown-toggle {
      @include caret(right);
      &::after {
        vertical-align: 0;
      }
    }
  }

  .dropleft {
    .dropdown-menu {
      top: 0;
      right: 100%;
      left: auto;
      margin-top: 0;
      margin-right: $dropdown-spacer;
    }

    .dropdown-toggle {
      @include caret(left);
      &::before {
        vertical-align: 0;
      }
    }
  }

  // When enabled Popper.js, reset basic dropdown position
  // stylelint-disable-next-line no-duplicate-selectors
  .dropdown-menu {
    &[x-placement^='top'],
    &[x-placement^='right'],
    &[x-placement^='bottom'],
    &[x-placement^='left'] {
      right: auto;
      bottom: auto;
    }
  }

  // Dividers (basically an `<hr>`) within the dropdown
  .dropdown-divider {
    @include nav-divider($dropdown-divider-bg, $dropdown-divider-margin-y);
  }

  // Links, buttons, and more within the dropdown menu
  //
  // `<button>`-specific styles are denoted with `// For <button>s`
  .dropdown-item {
    display: block;
    width: 100%; // For `<button>`s
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    clear: both;
    font-weight: $font-weight-normal;
    color: $dropdown-link-color;
    text-align: inherit; // For `<button>`s
    white-space: nowrap; // prevent links from randomly breaking onto new lines
    background-color: transparent; // For `<button>`s
    border: 0; // For `<button>`s

    // Prevent dropdown overflow if there's no padding
    // See https://github.com/twbs/bootstrap/pull/27703
    @if $dropdown-padding-y == 0 {
      &:first-child {
        @include border-top-radius($dropdown-inner-border-radius);
      }

      &:last-child {
        @include border-bottom-radius($dropdown-inner-border-radius);
      }
    }

    @include hover-focus {
      color: $dropdown-link-hover-color;
      text-decoration: none;
      @include gradient-bg($dropdown-link-hover-bg);
    }

    &.active,
    &:active {
      color: $dropdown-link-active-color;
      text-decoration: none;
      @include gradient-bg($dropdown-link-active-bg);
    }

    &.disabled,
    &:disabled {
      color: $dropdown-link-disabled-color;
      pointer-events: none;
      background-color: transparent;
      // Remove CSS gradients if they're enabled
      @if $enable-gradients {
        background-image: none;
      }
    }
  }

  .dropdown-menu.show {
    display: block;
  }

  // Dropdown section headers
  .dropdown-header {
    display: block;
    padding: $dropdown-padding-y $dropdown-item-padding-x;
    margin-bottom: 0; // for use with heading elements
    @include font-size($font-size-sm);
    color: $dropdown-header-color;
    white-space: nowrap; // as with > li > a
  }

  // Dropdown text
  .dropdown-item-text {
    display: block;
    padding: $dropdown-item-padding-y $dropdown-item-padding-x;
    color: $dropdown-link-color;
  }
}
